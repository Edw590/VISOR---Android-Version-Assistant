<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:tools="http://schemas.android.com/tools"
	android:targetSandboxVersion="2"
	android:installLocation="internalOnly">
	<!-- Regardless of coreApp="true" being here or not, if the app is a system app (with or without updates), it will
	 start in Safe Mode, it appears. If it's not a system app, it won't. But leave it on true anyways. Could work
	 somewhere. EDIT: removed, until the app is properly tested without any other normally available apps present.
	 EDIT 2: DON'T USE coreApps!!!! "// Only run "core" apps if we're encrypting the device." - if the "core" in quotes
	 meant coreApps, then there's no way to test the app on that case, nor it is useful anyway (no interaction - and
	 this is an assistant. And still, nothing for it to do in the background. No storage either. No Internet. No
	 nothing). -->

	<!-- The permissions here are at the lowest rank possible. That way, for example system|development permissions can
	 be known to be granted with "pm grant" with root commands, not just if the app is a system app. -->

	<!-- Normal+ permissions -->
	<uses-permission android:name="android.permission.FLASHLIGHT" />
	<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
	<uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
	<uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY" />
	<uses-permission android:name="android.permission.EXPAND_STATUS_BAR" />
	<uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"/>
	<uses-permission android:name="android.permission.INTERNET"/>
	<uses-permission android:name="android.permission.BLUETOOTH"/>
	<uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
	<uses-permission android:name="android.permission.BLUETOOTH_SCAN"/>
	<uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
	<uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
	<uses-permission android:name="android.permission.VIBRATE"/>
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
	<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/>
	<uses-permission android:name="android.permission.WAKE_LOCK"/>
	<uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>

	<!-- todo ALWAYS ADD NEW PERMISSIONS TO THE PERMISSION REQUESTER!!!!!!!!!!!! -->
	<!-- Dangerous+ permissions (runtime permissions - those that need to be explicitly granted by the user)  -->
	<uses-permission android:name="android.permission.CAMERA" />
	<uses-permission android:name="android.permission.RECEIVE_SMS" />
	<uses-permission android:name="android.permission.RECORD_AUDIO" />
	<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.READ_PHONE_STATE" />
	<uses-permission android:name="android.permission.READ_CALL_LOG" />
	<uses-permission android:name="android.permission.READ_CONTACTS" />
	<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
	<uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
	<uses-permission android:name="android.permission.ANSWER_PHONE_CALLS" />
	<uses-permission android:name="android.permission.CALL_PHONE" />
	<uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
	<!-- todo ALWAYS ADD NEW PERMISSIONS TO THE PERMISSION REQUESTER!!!!!!!!!!!! -->

	<!-- AppOps+ permissions (those that have a specific settings screen for the user to grant them) -->
	<uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
	<uses-permission android:name="android.permission.WRITE_SETTINGS"
		tools:ignore="ProtectedPermissions" /> <!-- Or Pre-installed, not just AppOps. -->

	<!-- todo ALWAYS ADD NEW PERMISSIONS TO THE PERMISSION REQUESTER!!!!!!!!!!!! -->
	<!-- Development permissions (must be explicitly granted with "pm grant/revoke" through ADB - su works too) -->
	<uses-permission android:name="android.permission.WRITE_SECURE_SETTINGS"
		tools:ignore="ProtectedPermissions" />
	<!-- todo ALWAYS ADD NEW PERMISSIONS TO THE PERMISSION REQUESTER!!!!!!!!!!!! -->

	<!-- Privileged apps'+ permissions (only by having the app installed in /system/priv-app, or below KitKat, in
	/system/app) -->
	<!-- For some of these permissions to show, hidden/internal APIs must be used to compile the app -->
	<uses-permission android:name="android.permission.CAPTURE_VIDEO_OUTPUT"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.CAPTURE_AUDIO_OUTPUT"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.CAPTURE_MEDIA_OUTPUT"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.CAPTURE_VOICE_COMMUNICATION_OUTPUT"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.READ_PRECISE_PHONE_STATE"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.LOCK_DEVICE"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.MODIFY_PHONE_STATE"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.SHUTDOWN"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.REBOOT"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.POWER_SAVER"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.CONNECTIVITY_INTERNAL"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.CAPTURE_AUDIO_HOTWORD"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.STATUS_BAR"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.INTERACT_ACROSS_USERS"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.PACKAGE_USAGE_STATS"
		tools:ignore="ProtectedPermissions" />
	<uses-permission android:name="android.permission.MANAGE_VOICE_KEYPHRASES"
		tools:ignore="ProtectedPermissions" />

	<!-- There can only be one Package Installer and Package Verifier in the system -> Play Store is both, so forget it,
	 don't try get the app as one of those, because the system won't boot (there's already Play Store on it). Either
	 root obscure ways or sign the app with the system certificate to have God functionality. -->

	<!-- SuperSU permission -->
	<uses-permission android:name="android.permission.ACCESS_SUPERUSER" />

	<!-- https://android.googlesource.com/platform/frameworks/base/+/master/core/res/AndroidManifest.xml -->

	<!-- todo INSTALL THE APP AS SYSTEM-ONLY, -REMOVE THE ROOT- PERMISSION, AND FIX ALL THE ERRORS!!!!!!!!! -->
	<!-- todo FORCE THE APP TO GRANT ITS OWN PERMISSIONS EACH SOME TIME WITH ROOT OR WITH SOME SYSTEM METHOD!!!!!!!! -->


	<!-- Allow app installation through Google Play Store even if features are not available on the device -->
	<!-- Keep checking this in https://developer.android.com/guide/topics/manifest/uses-feature-element#permissions!
	 Last check on 2022-01-06. EDIT: Plan B to prevent some future... All available on Android Studio set to false. -->
	<uses-feature android:name="android.hardware.audio.low_latency" android:required="false" />
	<uses-feature android:name="android.hardware.audio.output" android:required="false" />
	<uses-feature android:name="android.hardware.audio.pro" android:required="false" />
	<uses-feature android:name="android.hardware.bluetooth" android:required="false" />
	<uses-feature android:name="android.hardware.bluetooth_le" android:required="false" />
	<uses-feature android:name="android.hardware.camera" android:required="false" />
	<uses-feature android:name="android.hardware.camera.any" android:required="false" />
	<uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />
	<uses-feature android:name="android.hardware.camera.ar" android:required="false" />
	<uses-feature android:name="android.hardware.camera.capability.manual_post_processing" android:required="false" />
	<uses-feature android:name="android.hardware.camera.capability.manual_sensor" android:required="false" />
	<uses-feature android:name="android.hardware.camera.capability.raw" android:required="false" />
	<uses-feature android:name="android.hardware.camera.external" android:required="false" />
	<uses-feature android:name="android.hardware.camera.flash" android:required="false" />
	<uses-feature android:name="android.hardware.camera.front" android:required="false" />
	<uses-feature android:name="android.hardware.camera.level.full" android:required="false" />
	<uses-feature android:name="android.hardware.consumerir" android:required="false" />
	<uses-feature android:name="android.hardware.ethernet" android:required="false" />
	<uses-feature android:name="android.hardware.faketouch" android:required="false" />
	<uses-feature android:name="android.hardware.faketouch.multitouch.distinct" android:required="false" />
	<uses-feature android:name="android.hardware.faketouch.multitouch.jazzhand" android:required="false" />
	<uses-feature android:name="android.hardware.fingerprint" android:required="false" />
	<uses-feature android:name="android.hardware.gamepad" android:required="false" />
	<uses-feature android:name="android.hardware.location" android:required="false" />
	<uses-feature android:name="android.hardware.location.gps" android:required="false" />
	<uses-feature android:name="android.hardware.location.network" android:required="false" />
	<uses-feature android:name="android.hardware.microphone" android:required="false" />
	<uses-feature android:name="android.hardware.nfc" android:required="false" />
	<uses-feature android:name="android.hardware.nfc.hce" android:required="false" />
	<uses-feature android:name="android.hardware.nfc.hcef" android:required="false" />
	<uses-feature android:name="android.hardware.opengles.aep" android:required="false" />
	<uses-feature android:name="android.hardware.ram.low" android:required="false" />
	<uses-feature android:name="android.hardware.ram.normal" android:required="false" />
	<uses-feature android:name="android.hardware.screen.landscape" android:required="false" />
	<uses-feature android:name="android.hardware.screen.portrait" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.accelerometer" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.ambient_temperature" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.barometer" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.compass" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.gyroscope" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.heartrate" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.heartrate.ecg" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.hifi_sensors" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.light" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.proximity" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.relative_humidity" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.stepcounter" android:required="false" />
	<uses-feature android:name="android.hardware.sensor.stepdetector" android:required="false" />
	<uses-feature android:name="android.hardware.strongbox_keystore" android:required="false" />
	<uses-feature android:name="android.hardware.telephony" android:required="false" />
	<uses-feature android:name="android.hardware.telephony.cdma" android:required="false" />
	<uses-feature android:name="android.hardware.telephony.euicc" android:required="false" />
	<uses-feature android:name="android.hardware.telephony.gsm" android:required="false" />
	<uses-feature android:name="android.hardware.telephony.mbms" android:required="false" />
	<uses-feature android:name="android.hardware.touchscreen" android:required="false" />
	<uses-feature android:name="android.hardware.touchscreen.multitouch" android:required="false" />
	<uses-feature android:name="android.hardware.touchscreen.multitouch.distinct" android:required="false" />
	<uses-feature android:name="android.hardware.touchscreen.multitouch.jazzhand" android:required="false" />
	<uses-feature android:name="android.hardware.type.automotive" android:required="false" />
	<uses-feature android:name="android.hardware.type.embedded" android:required="false" />
	<uses-feature android:name="android.hardware.type.pc" android:required="false" />
	<uses-feature android:name="android.hardware.type.television" android:required="false" />
	<uses-feature android:name="android.hardware.usb.accessory" android:required="false" />
	<uses-feature android:name="android.hardware.usb.host" android:required="false" />
	<uses-feature android:name="android.hardware.vr.headtracking" android:required="false" />
	<uses-feature android:name="android.hardware.vr.high_performance" android:required="false" />
	<uses-feature android:name="android.hardware.vulkan.compute" android:required="false" />
	<uses-feature android:name="android.hardware.vulkan.level" android:required="false" />
	<uses-feature android:name="android.hardware.vulkan.version" android:required="false" />
	<uses-feature android:name="android.hardware.wifi" android:required="false" />
	<uses-feature android:name="android.hardware.wifi.aware" android:required="false" />
	<uses-feature android:name="android.hardware.wifi.direct" android:required="false" />
	<uses-feature android:name="android.hardware.wifi.passpoint" android:required="false" />
	<uses-feature android:name="android.hardware.wifi.rtt" android:required="false" />
	<uses-feature android:name="android.hardware.type.watch" />
	<uses-feature android:name="android.software.leanback" android:required="false" />

	<application
		android:name="com.edw590.visor_c_a.ApplicationClass"
		android:permission="android.permission.MANAGE_VOICE_KEYPHRASES"

		android:label="@string/app_name_ACA"
		android:description="@string/app_description_ACA"
		android:icon="@mipmap/app_logo_adaptive_all"
		android:banner="@mipmap/ic_banner_tv"
		android:roundIcon="@mipmap/app_logo_adaptive_all_round"
		android:logo="@mipmap/app_logo_legacy_only"
		android:theme="@style/AppTheme.NoActionBar"
		android:appCategory="productivity"
		android:directBootAware="true"
		android:usesNonSdkApi="true"
		android:requestLegacyExternalStorage="true"
		android:largeHeap="true"
		android:hardwareAccelerated="true"
		android:killAfterRestore="true"
		android:restoreAnyVersion="true"
		android:supportsRtl="true"

		android:cantSaveState="false"
		android:allowClearUserData="true"
		android:persistent="false"

		android:allowAudioPlaybackCapture="false"
		android:allowBackup="false"
		android:fullBackupContent="true"
		android:fullBackupOnly="true"
		android:hasFragileUserData="true"
		android:useEmbeddedDex="true"
		android:vmSafeMode="true"
		android:requiredForAllUsers="false"
		android:usesCleartextTraffic="false"
		android:resizeableActivity="true">
		<!-- ^^^^ The attributes above but below the blank line are for maximum app security, hopefully -->
		<!-- requiredForAllUsers must be false, or the app will be installed as system, but can't be run at least
		 without updates (didn't try with updates) -> ???? todo See why this happens and get it to work -->
		<!-- MANAGE_VOICE_KEYPHRASES set as the Application permission is required to be eligible to be an Assistant.
		 Since it may be required again (or any other), always put a permission attribute on each component to override
		 the main one - if an override is required. -->
		<!-- testOnly is to override the debug mode, which sets it to true, and then the app can only be installed
		 through ADB with the -t option, to include installing Test apps -->

		<!-- Below, everything I can has exported=false, so nothing outside this app can reach those components.
		 Do NOT rely on custom permissions to ensure that only the app can reach components. That may not be always
		 true, like on KitKat and below because of the FakeID vulnerability and a custom permissions security
		 vulnerability. So that means, if the app is to support those APIs (currently, yes), then it can NOT rely on
		 custom permissions for anything important (or anything at all). -->

		<meta-data
			android:name="com.google.android.wearable.standalone"
			android:value="true" />

		<activity android:name="com.edw590.visor_c_a.ActivitiesFragments.Activities.ActMain"
			android:permission=""
			android:exported="true"
			android:directBootAware="true"
			android:configChanges="orientation|screenSize"
			android:autoRemoveFromRecents="true">
			<!--android:excludeFromRecents="true"-->
			<!-- Don't think about putting noHistory to true, since it will stop the app from being able to request
			 runtime permissions -->
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />
				<action android:name="android.intent.action.VIEW" />

				<category android:name="android.intent.category.LAUNCHER" />
				<category android:name="android.intent.category.LEANBACK_LAUNCHER" />
			</intent-filter>
		</activity>
		<activity android:name="com.edw590.visor_c_a.ActivitiesFragments.Activities.ActFlash"
			android:noHistory="true"
			android:permission=""
			android:exported="true"
			android:directBootAware="true"
			android:autoRemoveFromRecents="true"
			android:excludeFromRecents="true">
		</activity>
		<activity android:name="com.edw590.visor_c_a.ActivitiesFragments.Activities.ActAssist"
			android:noHistory="true"
			android:permission=""
			android:exported="true"
			android:directBootAware="true"
			android:autoRemoveFromRecents="true"
			android:excludeFromRecents="true"
			android:theme="@android:style/Theme.NoDisplay">
			<intent-filter>
				<action android:name="android.intent.action.SEARCH_LONG_PRESS"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
			<intent-filter>
				<action android:name="android.speech.action.VOICE_SEARCH_HANDS_FREE"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
			<intent-filter>
				<action android:name="android.speech.action.WEB_SEARCH"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
			<intent-filter>
				<action android:name="android.intent.action.VOICE_COMMAND"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
			<intent-filter>
				<action android:name="android.intent.action.VOICE_ASSIST"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
			<intent-filter>
				<action android:name="android.intent.action.CALL_BUTTON"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
			<intent-filter>
				<action android:name="android.intent.action.CALL_PRIVILEGED"/>
				<category android:name="android.intent.category.DEFAULT"/>
				<data android:scheme="tel"/>
			</intent-filter>
			<intent-filter>
				<action android:name="android.intent.action.ASSIST"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
			<intent-filter>
				<action android:name="com.google.android.glass.action.VOICE_TRIGGER"/>
				<category android:name="android.intent.category.DEFAULT"/>
			</intent-filter>
		</activity>
		<activity android:name="com.edw590.visor_c_a.Modules.ProtectedLockScr.ProtectedLockScrAct"
			android:noHistory="true"
			android:permission=""
			android:exported="false"
			android:directBootAware="true"
			android:showOnLockScreen="true"
			android:showForAllUsers="true"
			android:turnScreenOn="false"
			android:autoRemoveFromRecents="true"
			android:excludeFromRecents="true"
			android:showWhenLocked="true"
			android:resizeableActivity="false"
			tools:ignore="NonResizeableActivity"
			android:process=":Protected_Lock_Screen" />
			<!-- Keep turnScreenOn false. On BV9500 (tested with the app as a system app, at least), it was making the
			 screen being always On, even after I would press the Power button -> I'd like to be able to turn off the
			 screen... -->
			<!-- resizeableActivity false so the user can't split the screen while on the PLS (would be a security flaw) -->

		<profileable android:shell="true"/>
		<activity android:name="com.edw590.visor_c_a.ActivitiesFragments.Activities.ActScrCapturePerm"
			android:noHistory="true"
			android:permission=""
			android:exported="false"
			android:directBootAware="true"
			android:autoRemoveFromRecents="true"
			android:excludeFromRecents="true">
		</activity>

		<!-- Persistence only applies to services in the default application process. If any <service> tag includes an
		 "android:process" attribute that causes it to run in a separate process, that process will NOT be persistent. -->
		<!-- On the services that say the type is for location, I just think location will be given more priority for
		 anything that it's done with this. -->
		<service android:name="com.edw590.visor_c_a.MainSrvc.MainSrvc"
			android:permission=""
			android:exported="false"
			android:directBootAware="false" />
		<!-- Do NOT put the process tag in the Main Service!!! (Read the persistence note above) -->
		<service android:name="com.edw590.visor_c_a.Modules.CameraManager.TakePictureNew"
			android:permission=""
			android:exported="false"
			android:directBootAware="false" />
		<service android:name="com.edw590.visor_c_a.Modules.ProtectedLockScr.ProtectedLockScrSrv"
			android:permission=""
			android:exported="false"
			android:directBootAware="true"
			android:process=":Protected_Lock_Screen" />
		<service android:name="com.edw590.visor_c_a.Modules.SpeechRecognitionCtrl.CommandsRecognition"
			android:permission=""
			android:exported="false"
			android:directBootAware="true"
			android:process=":Commands_Speech_Recognition" />
		<service android:name="com.edw590.visor_c_a.AccessibilityService.AccessibilityService"
			android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE"
			android:exported="true"
			android:directBootAware="true">
			<intent-filter>
				<action android:name="android.accessibilityservice.AccessibilityService" />
			</intent-filter>
			<meta-data android:name="android.accessibilityservice"
				android:resource="@xml/accessibility_service" />
		</service>

		<receiver android:name="com.edw590.visor_c_a.BroadcastRecvs.DeviceAdmin.DeviceAdminRecv"
			android:permission="android.permission.BIND_DEVICE_ADMIN"
			android:exported="true"
			android:directBootAware="true">
			<meta-data android:name="android.app.device_admin"
				android:resource="@xml/device_administration" />

			<intent-filter android:priority="1000">
				<action android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
			</intent-filter>
			<intent-filter android:priority="1000">
				<action android:name="android.app.action.DEVICE_ADMIN_DISABLED" />
			</intent-filter>
			<intent-filter android:priority="1000">
				<action android:name="android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED" />
			</intent-filter>
		</receiver>
		<receiver android:name="com.edw590.visor_c_a.BroadcastRecvs.AppStartRecv"
			android:permission=""
			android:exported="true"
			android:directBootAware="true"
			tools:ignore="UnprotectedSMSBroadcastReceiver">
			<intent-filter android:priority="1000">
				<!-- DO NOT USE THIS TO ACTUALLY DECIDE WHAT TO DO WITH STUFF!!! USE THE REGISTERED BROADCASTS FOR
				 THAT!!! I'M IGNORING SAFETY MEASURES HERE BECAUSE THIS IS ONLY USED TO AUTOMATICALLY START THE MAIN
				 SERVICE!!! -->

				<!-- 1000 priority as that's system-level used priority. So this will get stuff first and nothing can
				 stop the broadcast before this gets it (as long as it's installed as a system app, that is - else, the
				 system will ignore the priority and will set it to 0). -->

				<!-- ALWAYS REGISTER ACTIONS INSTEAD OF DECLARING THEM TO AVOID ISSUES WITH REGISTER-ONLY ACTIONS -->
				<!-- Also, all actions need to be sent with the Main Service started and not with it stopped, so why
				 not register them all anyways. -->

				<!-- All of these are for the system to send ANYthing to start the Main Service in case it crashed or
				something. See "List of all the Intent-Filters that I found.txt" for the list of these broadcasts. -->
				<!-- Also, don't forget various of these are sent only to registered broadcast receivers! But still,
				some are not like that, like boot, volume and phone unlock stuff, so cool (I'll not filter that manually
				- too much work). -->
				<action android:name="android.accounts.LOGIN_ACCOUNTS_CHANGED" />
				<action android:name="android.accounts.action.ACCOUNT_REMOVED" />
				<action android:name="android.app.action.ACTION_PASSWORD_CHANGED" />
				<action android:name="android.app.action.ACTION_PASSWORD_EXPIRING" />
				<action android:name="android.app.action.ACTION_PASSWORD_FAILED" />
				<action android:name="android.app.action.ACTION_PASSWORD_SUCCEEDED" />
				<action android:name="android.app.action.APPLICATION_DELEGATION_SCOPES_CHANGED" />
				<action android:name="android.app.action.APP_BLOCK_STATE_CHANGED" />
				<action android:name="android.app.action.DEVICE_ADMIN_DISABLED" />
				<action android:name="android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED" />
				<action android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
				<action android:name="android.app.action.DEVICE_OWNER_CHANGED" />
				<action android:name="android.app.action.INTERRUPTION_FILTER_CHANGED" />
				<action android:name="android.app.action.LOCK_TASK_ENTERING" />
				<action android:name="android.app.action.LOCK_TASK_EXITING" />
				<action android:name="android.app.action.NEXT_ALARM_CLOCK_CHANGED" />
				<action android:name="android.app.action.NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED" />
				<action android:name="android.app.action.NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED" />
				<action android:name="android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED" />
				<action android:name="android.app.action.NOTIFICATION_POLICY_CHANGED" />
				<action android:name="android.app.action.PROFILE_OWNER_CHANGED" />
				<action android:name="android.app.action.PROFILE_PROVISIONING_COMPLETE" />
				<action android:name="android.app.action.SYSTEM_UPDATE_POLICY_CHANGED" />
				<action android:name="android.appwidget.action.APPWIDGET_DELETED" />
				<action android:name="android.appwidget.action.APPWIDGET_DISABLED" />
				<action android:name="android.appwidget.action.APPWIDGET_ENABLED" />
				<action android:name="android.appwidget.action.APPWIDGET_HOST_RESTORED" />
				<action android:name="android.appwidget.action.APPWIDGET_RESTORED" />
				<action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
				<action android:name="android.appwidget.action.APPWIDGET_UPDATE_OPTIONS" />
				<action android:name="android.bluetooth.a2dp.profile.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.a2dp.profile.action.PLAYING_STATE_CHANGED" />
				<action android:name="android.bluetooth.adapter.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.adapter.action.DISCOVERY_FINISHED" />
				<action android:name="android.bluetooth.adapter.action.DISCOVERY_STARTED" />
				<action android:name="android.bluetooth.adapter.action.LOCAL_NAME_CHANGED" />
				<action android:name="android.bluetooth.adapter.action.SCAN_MODE_CHANGED" />
				<action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
				<action android:name="android.bluetooth.device.action.ACL_CONNECTED" />
				<action android:name="android.bluetooth.device.action.ACL_DISCONNECTED" />
				<action android:name="android.bluetooth.device.action.ACL_DISCONNECT_REQUESTED" />
				<action android:name="android.bluetooth.device.action.BOND_STATE_CHANGED" />
				<action android:name="android.bluetooth.device.action.CLASS_CHANGED" />
				<action android:name="android.bluetooth.device.action.FOUND" />
				<action android:name="android.bluetooth.device.action.NAME_CHANGED" />
				<action android:name="android.bluetooth.device.action.PAIRING_REQUEST" />
				<action android:name="android.bluetooth.device.action.UUID" />
				<action android:name="android.bluetooth.devicepicker.action.DEVICE_SELECTED" />
				<action android:name="android.bluetooth.devicepicker.action.LAUNCH" />
				<action android:name="android.bluetooth.headset.action.VENDOR_SPECIFIC_HEADSET_EVENT" />
				<action android:name="android.bluetooth.headset.profile.action.AUDIO_STATE_CHANGED" />
				<action android:name="android.bluetooth.headset.profile.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.hearingaid.profile.action.ACTIVE_DEVICE_CHANGED" />
				<action android:name="android.bluetooth.hearingaid.profile.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.hearingaid.profile.action.PLAYING_STATE_CHANGED" />
				<action android:name="android.bluetooth.hiddevice.profile.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.input.profile.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.pan.profile.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.pbap.profile.action.CONNECTION_STATE_CHANGED" />
				<action android:name="android.content.pm.action.SESSION_COMMITTED" />
				<action android:name="android.hardware.action.NEW_PICTURE" />
				<action android:name="android.hardware.action.NEW_VIDEO" />
				<action android:name="android.hardware.hdmi.action.OSD_MESSAGE" />
				<action android:name="android.hardware.input.action.QUERY_KEYBOARD_LAYOUTS" />
				<action android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED" />
				<action android:name="android.hardware.usb.action.USB_ACCESSORY_DETACHED" />
				<action android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED" />
				<action android:name="android.hardware.usb.action.USB_DEVICE_DETACHED" />
				<action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
				<action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
				<action android:name="android.intent.action.ACTION_SHUTDOWN" />
				<action android:name="android.intent.action.AIRPLANE_MODE" />
				<action android:name="android.intent.action.APPLICATION_RESTRICTIONS_CHANGED" />
				<action android:name="android.intent.action.BATTERY_CHANGED" />
				<action android:name="android.intent.action.BATTERY_LOW" />
				<action android:name="android.intent.action.BATTERY_OKAY" />
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<action android:name="android.intent.action.CAMERA_BUTTON" />
				<action android:name="android.intent.action.CLOSE_SYSTEM_DIALOGS" />
				<action android:name="android.intent.action.CONFIGURATION_CHANGED" />
				<action android:name="android.intent.action.CONTENT_CHANGED" />
				<action android:name="android.intent.action.DATA_SMS_RECEIVED" />
				<action android:name="android.intent.action.DATE_CHANGED" />
				<action android:name="android.intent.action.DEVICE_STORAGE_LOW" />
				<action android:name="android.intent.action.DEVICE_STORAGE_OK" />
				<action android:name="android.intent.action.DOCK_EVENT" />
				<action android:name="android.intent.action.DOWNLOAD_COMPLETE" />
				<action android:name="android.intent.action.DOWNLOAD_NOTIFICATION_CLICKED" />
				<action android:name="android.intent.action.DREAMING_STARTED" />
				<action android:name="android.intent.action.DREAMING_STOPPED" />
				<action android:name="android.intent.action.DROPBOX_ENTRY_ADDED" />
				<action android:name="android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE" />
				<action android:name="android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE" />
				<action android:name="android.intent.action.FACTORY_RESET" />
				<action android:name="android.intent.action.FETCH_VOICEMAIL" />
				<action android:name="android.intent.action.GTALK_CONNECTED" />
				<action android:name="android.intent.action.GTALK_DISCONNECTED" />
				<action android:name="android.intent.action.HEADSET_PLUG" />
				<action android:name="android.intent.action.INPUT_METHOD_CHANGED" />
				<action android:name="android.intent.action.INTENT_FILTER_NEEDS_VERIFICATION" />
				<action android:name="android.intent.action.LOCALE_CHANGED" />
				<action android:name="android.intent.action.LOCKED_BOOT_COMPLETED" />
				<action android:name="android.intent.action.MANAGE_PACKAGE_STORAGE" />
				<action android:name="android.intent.action.MASTER_CLEAR_NOTIFICATION" />
				<action android:name="android.intent.action.MEDIA_BAD_REMOVAL" />
				<action android:name="android.intent.action.MEDIA_BUTTON" />
				<action android:name="android.intent.action.MEDIA_CHECKING" />
				<action android:name="android.intent.action.MEDIA_EJECT" />
				<action android:name="android.intent.action.MEDIA_MOUNTED" />
				<action android:name="android.intent.action.MEDIA_NOFS" />
				<action android:name="android.intent.action.MEDIA_REMOVED" />
				<action android:name="android.intent.action.MEDIA_SCANNER_FINISHED" />
				<action android:name="android.intent.action.MEDIA_SCANNER_SCAN_FILE" />
				<action android:name="android.intent.action.MEDIA_SCANNER_STARTED" />
				<action android:name="android.intent.action.MEDIA_SHARED" />
				<action android:name="android.intent.action.MEDIA_UNMOUNTABLE" />
				<action android:name="android.intent.action.MEDIA_UNMOUNTED" />
				<action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
				<action android:name="android.intent.action.MY_PACKAGE_SUSPENDED" />
				<action android:name="android.intent.action.MY_PACKAGE_UNSUSPENDED" />
				<action android:name="android.intent.action.NEW_OUTGOING_CALL" />
				<action android:name="android.intent.action.NEW_VOICEMAIL" />
				<action android:name="android.intent.action.PACKAGES_SUSPENDED" />
				<action android:name="android.intent.action.PACKAGES_UNSUSPENDED" />
				<action android:name="android.intent.action.PACKAGE_ADDED" />
				<action android:name="android.intent.action.PACKAGE_CHANGED" />
				<action android:name="android.intent.action.PACKAGE_DATA_CLEARED" />
				<action android:name="android.intent.action.PACKAGE_FIRST_LAUNCH" />
				<action android:name="android.intent.action.PACKAGE_FULLY_REMOVED" />
				<action android:name="android.intent.action.PACKAGE_INSTALL" />
				<action android:name="android.intent.action.PACKAGE_NEEDS_VERIFICATION" />
				<action android:name="android.intent.action.PACKAGE_REMOVED" />
				<action android:name="android.intent.action.PACKAGE_REPLACED" />
				<action android:name="android.intent.action.PACKAGE_RESTARTED" />
				<action android:name="android.intent.action.PACKAGE_VERIFIED" />
				<action android:name="android.intent.action.PHONE_STATE" />
				<action android:name="android.intent.action.PROVIDER_CHANGED" />
				<action android:name="android.intent.action.PROXY_CHANGE" />
				<action android:name="android.intent.action.QUERY_PACKAGE_RESTART" />
				<action android:name="android.intent.action.REBOOT" />
				<action android:name="android.intent.action.SCREEN_OFF" />
				<action android:name="android.intent.action.SCREEN_ON" />
				<action android:name="android.intent.action.SIM_STATE_CHANGED" />
				<action android:name="android.intent.action.SPLIT_CONFIGURATION_CHANGED" />
				<action android:name="android.intent.action.TIMEZONE_CHANGED" />
				<action android:name="android.intent.action.TIME_SET" />
				<action android:name="android.intent.action.TIME_TICK" />
				<action android:name="android.intent.action.UID_REMOVED" />
				<action android:name="android.intent.action.UMS_CONNECTED" />
				<action android:name="android.intent.action.UMS_DISCONNECTED" />
				<action android:name="android.intent.action.USER_PRESENT" />
				<action android:name="android.intent.action.USER_UNLOCKED" />
				<action android:name="android.intent.action.WALLPAPER_CHANGED" />
				<action android:name="android.media.ACTION_SCO_AUDIO_STATE_UPDATED" />
				<action android:name="android.media.AUDIO_BECOMING_NOISY" />
				<action android:name="android.media.RINGER_MODE_CHANGED" />
				<action android:name="android.media.SCO_AUDIO_STATE_CHANGED" />
				<action android:name="android.media.VIBRATE_SETTING_CHANGED" />
				<action android:name="android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION" />
				<action android:name="android.media.action.HDMI_AUDIO_PLUG" />
				<action android:name="android.media.action.MICROPHONE_MUTE_CHANGED" />
				<action android:name="android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION" />
				<action android:name="android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED" />
				<action android:name="android.media.tv.action.INITIALIZE_PROGRAMS" />
				<action android:name="android.media.tv.action.PREVIEW_PROGRAM_ADDED_TO_WATCH_NEXT" />
				<action android:name="android.media.tv.action.PREVIEW_PROGRAM_BROWSABLE_DISABLED" />
				<action android:name="android.media.tv.action.WATCH_NEXT_PROGRAM_BROWSABLE_DISABLED" />
				<action android:name="android.net.conn.BACKGROUND_DATA_SETTING_CHANGED" />
				<action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
				<action android:name="android.net.conn.RESTRICT_BACKGROUND_CHANGED" />
				<action android:name="android.net.nsd.STATE_CHANGED" />
				<action android:name="android.net.scoring.SCORER_CHANGED" />
				<action android:name="android.net.scoring.SCORE_NETWORKS" />
				<action android:name="android.net.wifi.NETWORK_IDS_CHANGED" />
				<action android:name="android.net.wifi.RSSI_CHANGED" />
				<action android:name="android.net.wifi.SCAN_RESULTS" />
				<action android:name="android.net.wifi.STATE_CHANGE" />
				<action android:name="android.net.wifi.WIFI_STATE_CHANGED" />
				<action android:name="android.net.wifi.aware.action.WIFI_AWARE_STATE_CHANGED" />
				<action android:name="android.net.wifi.p2p.CONNECTION_STATE_CHANGE" />
				<action android:name="android.net.wifi.p2p.DISCOVERY_STATE_CHANGE" />
				<action android:name="android.net.wifi.p2p.PEERS_CHANGED" />
				<action android:name="android.net.wifi.p2p.STATE_CHANGED" />
				<action android:name="android.net.wifi.p2p.THIS_DEVICE_CHANGED" />
				<action android:name="android.net.wifi.rtt.action.WIFI_RTT_STATE_CHANGED" />
				<action android:name="android.net.wifi.supplicant.CONNECTION_CHANGE" />
				<action android:name="android.net.wifi.supplicant.STATE_CHANGE" />
				<action android:name="android.nfc.action.ADAPTER_STATE_CHANGED" />
				<action android:name="android.nfc.action.TRANSACTION_DETECTED" />
				<action android:name="android.os.action.DEVICE_IDLE_MODE_CHANGED" />
				<action android:name="android.os.action.POWER_SAVE_MODE_CHANGED" />
				<action android:name="android.provider.Telephony.SECRET_CODE" />
				<action android:name="android.provider.Telephony.SIM_FULL" />
				<action android:name="android.provider.Telephony.SMS_CB_RECEIVED" />
				<action android:name="android.provider.Telephony.SMS_DELIVER" />
				<action android:name="android.provider.Telephony.SMS_RECEIVED" />
				<action android:name="android.provider.Telephony.SMS_REJECTED" />
				<action android:name="android.provider.Telephony.SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED" />
				<action android:name="android.provider.Telephony.WAP_PUSH_DELIVER" />
				<action android:name="android.provider.Telephony.WAP_PUSH_RECEIVED" />
				<action android:name="android.provider.action.DEFAULT_SMS_PACKAGE_CHANGED" />
				<action android:name="android.provider.action.EXTERNAL_PROVIDER_CHANGE" />
				<action android:name="android.provider.action.SYNC_VOICEMAIL" />
				<action android:name="android.security.STORAGE_CHANGED" />
				<action android:name="android.security.action.KEYCHAIN_CHANGED" />
				<action android:name="android.security.action.KEY_ACCESS_CHANGED" />
				<action android:name="android.security.action.TRUST_STORE_CHANGED" />
				<action android:name="android.speech.tts.TTS_QUEUE_PROCESSING_COMPLETED" />
				<action android:name="android.speech.tts.engine.TTS_DATA_INSTALLED" />
				<action android:name="android.telephony.action.DEFAULT_SMS_SUBSCRIPTION_CHANGED" />
				<action android:name="android.telephony.action.DEFAULT_SUBSCRIPTION_CHANGED" />
				<action android:name="android.telephony.action.REFRESH_SUBSCRIPTION_PLANS" />
				<action android:name="android.telephony.action.SIM_APPLICATION_STATE_CHANGED" />
				<action android:name="android.telephony.action.SIM_CARD_STATE_CHANGED" />
				<action android:name="android.telephony.action.SIM_SLOT_STATUS_CHANGED" />
				<action android:name="android.telephony.action.SUBSCRIPTION_CARRIER_IDENTITY_CHANGED" />
				<action android:name="android.telephony.euicc.action.NOTIFY_CARRIER_SETUP_INCOMPLETE" />
				<action android:name="android.telephony.euicc.action.OTA_STATUS_CHANGED" />
				<action android:name="android.app.action.AFFILIATED_PROFILE_TRANSFER_OWNERSHIP_COMPLETE" />
				<action android:name="android.app.action.AUTOMATIC_ZEN_RULE_STATUS_CHANGED" />
				<action android:name="android.app.action.BUGREPORT_FAILED" />
				<action android:name="android.app.action.BUGREPORT_SHARE" />
				<action android:name="android.app.action.BUGREPORT_SHARING_DECLINED" />
				<action android:name="android.app.action.DATA_SHARING_RESTRICTION_APPLIED" />
				<action android:name="android.app.action.DATA_SHARING_RESTRICTION_CHANGED" />
				<action android:name="android.app.action.INTERRUPTION_FILTER_CHANGED_INTERNAL" />
				<action android:name="android.app.action.MANAGED_USER_CREATED" />
				<action android:name="android.app.action.NETWORK_LOGS_AVAILABLE" />
				<action android:name="android.app.action.NOTIFY_PENDING_SYSTEM_UPDATE" />
				<action android:name="android.app.action.SECURITY_LOGS_AVAILABLE" />
				<action android:name="android.app.action.TRANSFER_OWNERSHIP_COMPLETE" />
				<action android:name="android.app.action.USER_ADDED" />
				<action android:name="android.app.action.USER_REMOVED" />
				<action android:name="android.app.action.USER_STARTED" />
				<action android:name="android.app.action.USER_STOPPED" />
				<action android:name="android.app.action.USER_SWITCHED" />
				<action android:name="android.bluetooth.a2dp.profile.action.ACTIVE_DEVICE_CHANGED" />
				<action android:name="android.bluetooth.a2dp.profile.action.AVRCP_CONNECTION_STATE_CHANGED" />
				<action android:name="android.bluetooth.a2dp.profile.action.CODEC_CONFIG_CHANGED" />
				<action android:name="android.bluetooth.device.action.ALIAS_CHANGED" />
				<action android:name="android.bluetooth.device.action.BATTERY_LEVEL_CHANGED" />
				<action android:name="android.bluetooth.device.action.CONNECTION_ACCESS_CANCEL" />
				<action android:name="android.bluetooth.device.action.CONNECTION_ACCESS_REPLY" />
				<action android:name="android.bluetooth.device.action.CONNECTION_ACCESS_REQUEST" />
				<action android:name="android.bluetooth.device.action.MAS_INSTANCE" />
				<action android:name="android.bluetooth.device.action.NAME_FAILED" />
				<action android:name="android.bluetooth.device.action.PAIRING_CANCEL" />
				<action android:name="android.bluetooth.device.action.SDP_RECORD" />
				<action android:name="android.bluetooth.device.action.SILENCE_MODE_CHANGED" />
				<action android:name="android.bluetooth.headset.profile.action.ACTIVE_DEVICE_CHANGED" />
				<action android:name="android.bluetooth.input.profile.action.HANDSHAKE" />
				<action android:name="android.bluetooth.input.profile.action.IDLE_TIME_CHANGED" />
				<action android:name="android.bluetooth.input.profile.action.PROTOCOL_MODE_CHANGED" />
				<action android:name="android.bluetooth.input.profile.action.REPORT" />
				<action android:name="android.bluetooth.input.profile.action.VIRTUAL_UNPLUG_STATUS" />
				<action android:name="android.content.pm.action.SESSION_UPDATED" />
				<action android:name="android.intent.action.ACTION_IDLE_MAINTENANCE_END" />
				<action android:name="android.intent.action.ACTION_IDLE_MAINTENANCE_START" />
				<action android:name="android.intent.action.ACTION_PREFERRED_ACTIVITY_CHANGED" />
				<action android:name="android.intent.action.ALARM_CHANGED" />
				<action android:name="android.intent.action.CALL_DISCONNECT_CAUSE" />
				<action android:name="android.intent.action.CANCEL_ENABLE_ROLLBACK" />
				<action android:name="android.intent.action.CLEAR_DNS_CACHE" />
				<action android:name="android.intent.action.DATA_STALL_DETECTED" />
				<action android:name="android.intent.action.DEVICE_STORAGE_FULL" />
				<action android:name="android.intent.action.DEVICE_STORAGE_NOT_FULL" />
				<action android:name="android.intent.action.DISTRACTING_PACKAGES_CHANGED" />
				<action android:name="android.intent.action.DYNAMIC_SENSOR_CHANGED" />
				<action android:name="android.intent.action.EMERGENCY_CALLBACK_MODE_CHANGED" />
				<action android:name="android.intent.action.EMERGENCY_CALL_STATE_CHANGED" />
				<action android:name="android.intent.action.PACKAGE_ENABLE_ROLLBACK" />
				<action android:name="android.intent.action.PACKAGE_NEEDS_INTEGRITY_VERIFICATION" />
				<action android:name="android.intent.action.PACKAGE_UNSUSPENDED_MANUALLY" />
				<action android:name="android.intent.action.ROLLBACK_COMMITTED" />
				<action android:name="android.intent.action.SERVICE_STATE" />
				<action android:name="android.intent.action.SUB_DEFAULT_CHANGED" />
				<action android:name="android.media.INTERNAL_RINGER_MODE_CHANGED_ACTION" />
				<action android:name="android.media.MASTER_MUTE_CHANGED_ACTION" />
				<action android:name="android.media.STREAM_DEVICES_CHANGED_ACTION" />
				<action android:name="android.media.STREAM_MUTE_CHANGED_ACTION" />
				<action android:name="android.media.VOLUME_CHANGED_ACTION" />
				<action android:name="android.media.action.SPEAKERPHONE_STATE_CHANGED" />
				<action android:name="android.net.conn.CAPTIVE_PORTAL_TEST_COMPLETED" />
				<action android:name="android.net.conn.DATA_ACTIVITY_CHANGE" />
				<action android:name="android.net.conn.INET_CONDITION_ACTION" />
				<action android:name="android.net.conn.TETHER_STATE_CHANGED" />
				<action android:name="android.net.sip.action.SIP_CALL_OPTION_CHANGED" />
				<action android:name="android.net.sip.action.SIP_INCOMING_CALL" />
				<action android:name="android.net.sip.action.SIP_REMOVE_PROFILE" />
				<action android:name="android.net.sip.action.SIP_SERVICE_UP" />
				<action android:name="android.net.sip.action.START_SIP" />
				<action android:name="android.net.wifi.BATCHED_RESULTS" />
				<action android:name="android.net.wifi.action.WIFI_NETWORK_SUGGESTION_POST_CONNECTION" />
				<action android:name="android.net.wifi.action.WIFI_SCAN_AVAILABILITY_CHANGED" />
				<action android:name="android.nfc.action.PREFERRED_PAYMENT_CHANGED" />
				<action android:name="android.os.action.ACTION_EFFECTS_SUPPRESSOR_CHANGED" />
				<action android:name="android.os.action.LIGHT_DEVICE_IDLE_MODE_CHANGED" />
				<action android:name="android.os.action.POWER_SAVE_MODE_CHANGED_INTERNAL" />
				<action android:name="android.os.action.POWER_SAVE_MODE_CHANGING" />
				<action android:name="android.os.action.POWER_SAVE_TEMP_WHITELIST_CHANGED" />
				<action android:name="android.os.action.POWER_SAVE_WHITELIST_CHANGED" />
				<action android:name="android.os.action.UPDATE_EMERGENCY_NUMBER_DB" />
				<action android:name="android.provider.Telephony.MMS_DOWNLOADED" />
				<action android:name="android.provider.Telephony.SMS_CARRIER_PROVISION" />
				<action android:name="android.provider.action.SMS_EMERGENCY_CB_RECEIVED" />
				<action android:name="android.provider.action.SMS_MMS_DB_CREATED" />
				<action android:name="android.provider.action.SMS_MMS_DB_LOST" />
				<action android:name="android.service.controls.action.ADD_CONTROL" />
				<action android:name="android.settings.ENABLE_MMS_DATA_REQUEST" />
				<action android:name="android.telephony.action.AREA_INFO_UPDATED" />
				<action android:name="android.telephony.action.PRIMARY_SUBSCRIPTION_LIST_CHANGED" />
				<action android:name="android.telephony.action.SECRET_CODE" />
				<action android:name="android.telephony.action.SERVICE_PROVIDERS_UPDATED" />
				<action android:name="android.telephony.action.SUBSCRIPTION_PLANS_CHANGED" />
				<action android:name="android.telephony.action.SUBSCRIPTION_SPECIFIC_CARRIER_IDENTITY_CHANGED" />
				<action android:name="android.telephony.ims.action.WFC_IMS_REGISTRATION_ERROR" />
				<action android:name="com.android.intent.action.DISMISS_KEYBOARD_SHORTCUTS" />
				<action android:name="com.android.intent.action.SHOW_KEYBOARD_SHORTCUTS" />
				<action android:name="com.android.internal.intent.action.ACTION_FORBIDDEN_NO_SERVICE_AUTHORIZATION" />
				<action android:name="com.android.internal.provider.action.VOICEMAIL_SMS_RECEIVED" />
				<action android:name="android.provider.Telephony.SMS_EMERGENCY_CB_RECEIVED" />
				<action android:name="android.intent.action.PACKAGES_SUSPENSION_CHANGED" />

				<action android:name="android.intent.action.QUICKBOOT_POWERON" />
				<action android:name="com.htc.intent.action.QUICKBOOT_POWERON" />
				<!-- About QUICKBOOT_POWERON: "This is broadcast that you don’t find in the official Android
				documentation. It’s sent on some devices and emulators when the device is restarted only." - StackOverflow -->

				<!-- DO NOT USE THIS TO ACTUALLY DECIDE WHAT TO DO WITH STUFF!!! USE THE REGISTERED BROADCASTS FOR
				 THAT!!! I'M IGNORING SAFETY MEASURES HERE BECAUSE THIS IS ONLY USED TO AUTOMATICALLY START THE MAIN
				 SERVICE!!! -->
			</intent-filter>
		</receiver>

		<!-- This works, but was never tested because STATE_HARDWARE_UNSUPPORTED or UNAVAILABLE - I need a more powerful
		 device for that.
		 Link about this: https://source.android.com/docs/devices/automotive/voice/voice_interaction_guide/app_development#hotwords
		 Required manifest permission removed until necessary again: PACKAGE_USAGE_STATS -->
		<!-- AlwaysOnHotwordDetector attempts - ->
		<activity android:name="com.edw590.visor_c_a.VoiceEnrollment.TestEnrollmentActivity"
			android:label="Voice Enrollment Application"
			android:exported="true"
			android:directBootAware="false">
			<intent-filter>
				<action android:name="com.android.intent.action.MANAGE_VOICE_KEYPHRASES" />

				<category android:name="android.intent.category.DEFAULT" />
			</intent-filter>
		</activity>
		<meta-data android:name="android.voice_enrollment"
			android:resource="@xml/enrollment_application"/>

		<activity android:name="com.edw590.visor_c_a.VoiceInteraction.VoiceInteractionMain"
			android:permission=""
			android:exported="true"
			android:directBootAware="false">
			<intent-filter>
				<category android:name="android.intent.category.DEFAULT" />
			</intent-filter>
		</activity>
		<activity android:name="com.edw590.visor_c_a.VoiceInteraction.SettingsActivity"
			android:permission=""
			android:exported="true"
			android:directBootAware="false">
			<intent-filter>
				<category android:name="android.intent.category.DEFAULT" />
			</intent-filter>
		</activity>
		<activity android:name="com.edw590.visor_c_a.VoiceInteraction.TestInteractionActivity"
			android:permission=""
			android:exported="true"
			android:directBootAware="false">
			<intent-filter>
				<category android:name="android.intent.category.DEFAULT" />
				<category android:name="android.intent.category.VOICE" />
			</intent-filter>
		</activity>
		<service android:name="com.edw590.visor_c_a.VoiceInteraction.MainInteractionService"
			android:label="V.I.S.O.R. Hotword Detection"
			android:permission="android.permission.BIND_VOICE_INTERACTION"
			android:process=":interactor"
			android:exported="true"
			android:directBootAware="false">
			<meta-data android:name="android.voice_interaction"
				android:resource="@xml/interaction_service" />
			<intent-filter>
				<action android:name="android.service.voice.VoiceInteractionService" />
			</intent-filter>
		</service>
		<service android:name="com.edw590.visor_c_a.VoiceInteraction.MainInteractionSessionService"
			android:permission="android.permission.BIND_VOICE_INTERACTION"
			android:process=":session">
		</service>
		<!- -service android:name="com.edw590.visor_c_a.VoiceInteraction.MainRecognitionService"
			AutoVoice doesn't have this and works - keep it disabled
			android:permission=""
			android:label="Test Voice Interaction Service"
			android:exported="true"
			android:directBootAware="false">
			<intent-filter>
				<action android:name="android.speech.RecognitionService" />
				<category android:name="android.intent.category.DEFAULT" />
			</intent-filter>
			<meta-data android:name="android.speech"
				android:resource="@xml/recognition_service" />
		</service-->
		<!-- AlwaysOnHotwordDetector attempts -->
	</application>

</manifest>
